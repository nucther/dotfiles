##########################
# Hyprland config 
#
# Updated: 22 May 2023
##########################

monitor=DP-1,1600x900,0x0,1
monitor=HDMI-A-1,1920x1080,1600x0,1
monitor=eDP-1,disable
workspace=HDMI-A-1,1


## Start default apps
exec-once=dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once = systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once = swayidle timeout 600 'hyprctl dispatch dpms off && swaylock' resume 'hyprctl dispatch dpms on'
exec-once = hyprpaper &
exec-once = waybar
exec-once = dunst
exec-once = udiskie -t &


general {
    border_size = 1
    no_border_on_floating = true 
    gaps_in = 0
    gaps_out = 0
    col.active_border = rgba(33ccffee) rgba(00ff99ee) 45deg
    col.inactive_border = rgba(595959aa)
}

decoration {

}

master {
    new_is_master = true 
}


input {
    kb_layout = us
}

misc {
    disable_hyprland_logo = true 
    disable_splash_rendering = true 
}


## Window Rules 
windowrulev2 = center, class:^(fuzzell)$
#### Pavucontrol
windowrulev2 = float,class:^(pavucontrol)$
windowrulev2 = size 50% 60%,class:^(pavucontrol)$
windowrulev2 = center,class:^(pavucontrol)$
#### BTOP
windowrulev2 = size 60% 70%:title:^(btop)$
windowrulev2 = float,title:^(btop)$
windowrulev2 = center,title:^(btop)$
#### Chrome Task manager
windowrulev2 = float,title:^(Task Manager - Google Chrome)$
windowrulev2 = center,title:^(Task Manager - Google Chrome)$
#### Nemo 
windowrulev2 = float,class:^(nemo),title:(Properties)
#### Upwork 
windowrulev2 = nofullscreenrequest, class:^(Upwork)
windowrulev2 = float,class:^(Upwork)
windowrulev2 = center,class:^(Upwork)$

## KEY BINDING 

bind = SUPER, RETURN, exec, kitty
bind = SUPER, w, killactive,
bind = SUPER, space, exec, fuzzel
bind = CTRL+ALT, l , exec, swaylock & disown


### Hardware 
bindl=,switch:off:Lid Switch,exec,hyprctl keyword monitor "eDP-1, 1366x768, 0x900, 1"
bindl=,switch:on:Lid Switch,exec,hyprctl keyword monitor "eDP-1, disabled"

### Window Toggele 
bind = SUPER, F, fullscreen,
bind = SUPER, t, togglefloating
bind = SUPER, t, centerwindow


### Window Move SUPER + [j,k,h,l]
bind = SUPER, j, movefocus, u 
bind = SUPER, k, movefocus, d
bind = SUPER, h, movefocus, l 
bind = SUPER, l, movefocus, r

### Window move SUPER + SHIFT + [j,k,h,l]
bind = SUPER_SHIFT, j, movewindow, u
bind = SUPER_SHIFT, k, movewindow, d
bind = SUPER_SHIFT, h, movewindow, l
bind = SUPER_SHIFT, l, movewindow, r

### Window Resize 
bind = SUPER_ALT, l, resizeactive, 30 0
bind = SUPER_ALT, h, resizeactive, -30 0
bind = SUPER_ALT, j, resizeactive, 0 30
bind = SUPER_ALT, k, resizeactive, 0 -30
bind = SUPER_ALT, c, centerwindow


### Workspace SUPER + [1,9]
bind = SUPER, 1, workspace, 1 
bind = SUPER, 2, workspace, 2 
bind = SUPER, 3, workspace, 3 
bind = SUPER, 4, workspace, 4 
bind = SUPER, 5, workspace, 5 
bind = SUPER, 6, workspace, 6 
bind = SUPER, 7, workspace, 7 
bind = SUPER, 8, workspace, 8 
bind = SUPER, 9, workspace, 9
bind = SUPER, 0, togglespecialworkspace 

### Workspace Move 
bind = SUPER_SHIFT, 1, movetoworkspace, 1
bind = SUPER_SHIFT, 2, movetoworkspace, 2
bind = SUPER_SHIFT, 3, movetoworkspace, 3
bind = SUPER_SHIFT, 4, movetoworkspace, 4
bind = SUPER_SHIFT, 5, movetoworkspace, 5
bind = SUPER_SHIFT, 6, movetoworkspace, 6
bind = SUPER_SHIFT, 7, movetoworkspace, 7
bind = SUPER_SHIFT, 8, movetoworkspace, 8
bind = SUPER_SHIFT, 9, movetoworkspace, 9
bind = SUPER_SHIFT, 0, movetoworkspace, special 

bind = SUPER_SHIFT, s, movecurrentworkspacetomonitor, HDMI-A-1
bind = SUPER_ALT, s, movecurrentworkspacetomonitor, DP-1
bind = SUPER, n, swapnext,

bind = SUPER, z, swapactiveworkspaces, HDMI-A-1 DP-1

### Notification 
bind = SUPER_SHIFT, c, exec, dunstctl close-all


### APP 
bind = SUPER, m, exec, grim -o $(hyprctl monitors | grep -B 10 'focused: yes' | grep 'Monitor' | awk '{ print $2 }') - | wl-copy && notify-send "print screen" "Print screen active monitor saved to cliboard."
bind = SUPER_SHIFT, m, exec, grim -o $(hyprctl monitors | grep -B 10 'focused: yes' | grep 'Monitor' | awk '{ print $2 }') ~/Pictures/Screenshot/$(date +%Y-%m-%d_%H-%m-%s).png && notify-send "print screen" "Print screen active monitor saved to Pitures folder."
bind = SUPER, p, exec, grim -g "$(slurp)" - | wl-copy && notify-send "print screen" "Print screen area saved to clipboard." 
bind = SUPER_SHIFT, p, exec, grim -g "$(slurp)" ~/Pictures/Screenshot/$(date +%Y-%m-%d_%H-%m-%s).jpg && notify-send "print screen" "Print screen area saved to Pictures folder."
